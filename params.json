{"name":"Pixel-docs","tagline":"pixel documentation","body":"# Pixel documentation\r\n\r\n## javascript load\r\n\r\nLoads the boostable tracking software\r\n\r\nbrowser requirements:\r\n* ie8+\r\n* chrome 2.0+\r\n* safari 3.0+\r\n* firefox 4.0+ \r\n* opera 6.0+\r\n\r\nThis snippet should be places in the header of any page wanting to be tracked (replace \\<BOOST_ID\\> with id provided to you):\r\n\r\n```html\r\n<!-- boostable -->\r\n<noscript><img style=\"display:none;\" height=\"1\" width=\"1\" src=\"https://pxl.boostable.com?ev=view&id=<BOOST_ID>&ns=1\"/></noscript>\r\n<script>(function(b,s,t,p,x,l){b.bst||(b.bst=x=function(){x.event?x.event.apply(x,arguments):\r\nx.q.push(arguments)},x.q=[],x.v=\"2.1\",x.s=1*new Date());l=s.createElement(t);l.async=1;\r\nl.src=p;s.getElementsByTagName(t)[0].parentNode.appendChild(l)})(window,document,\"script\",\r\n\"//cdn.boostable.com/tr.js\");</script>\r\n\r\n<script>bst('init', '<BOOST_ID>');</script>\r\n<!-- end boostable -->\r\n```\r\n\r\n\r\n## objects\r\n\r\nIn order for the boostable tracking software to work as expected, calling the events with proper object parameters is a must. These objects are a guide as to what is expected in the events.\r\n\r\n\r\n### EcommerceObject\r\n\r\nboostable's representation of an ecommerce item. There is no constructor for this, \r\nbut objects with these attributes should be used as parameters to the events.\r\n\r\n\r\nattributes:\r\n* **sku** {String} _(required)_ unique product id\r\n* **cost** {Number} _(required)_ [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency value\r\n* **category** {String|Array[String]} _(optional)_ the object category\r\n* **quantity** {Number} _(optional)_ default: 1\r\n* **currency** {String} _(optional)_ [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency code default: 'USD'\r\n* **name** {String} _(optional)_\r\n* **description** {String} _(optional)_\r\n\r\n\r\nusage:\r\n```javascript\r\nvar o = {\r\n  sku: 'foo-123',\r\n  name: 'foo bar',\r\n  description: 'a little foo, a little bar',\r\n  category: ['foo', 'bar'],\r\n  cost: 1234,\r\n  currency: 'USD',\r\n  quantity: 2\r\n};\r\n```\r\n\r\n\r\n### EcommerceOrder\r\n\r\nboostable's representation of an ecommerce order. There is no constructor for this, \r\nbut objects with these attributes should be used.\r\n\r\nattributes:\r\n* **id** {String} _(required)_ unique order id\r\n* **total** {Number} _(required)_ total revenue as [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency value\r\n* **cart** {EcommerceObject|Array[EcommerceObject]} _(required)_ the items currently in the cart\r\n* **currency** {Number} _(optional)_ [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency code default: 'USD'\r\n* **subTotal** {Number} _(optional)_ summation of costs prior to any shipping, fees, tax, etc. as [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency value\r\n* **shipping** {Number} _(optional)_ any shipping cost applied as [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency value\r\n* **tax** {Number} _(optional)_ any tax applied as [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency value\r\n* **discount** {Number} _(optional)_ any discounts applied as [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency value\r\n* **fee** {Number} _(optional)_ any additional fees applied as [ISO-4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency value\r\n\r\nusage:\r\n```javascript\r\nvar o = {\r\n  id: 'order-123',\r\n  total: 4324,\r\n  subTotal: 4000,\r\n  tax: 324,\r\n  shipping: 0,\r\n  discount: 0,\r\n  currency: 'USD',\r\n  cart: {/*ecommerceObject*/} // or [{/*ecommerceObject 1*/}, {/*ecommerceObject 2*/} /*,...*/]\r\n};\r\n```\r\n\r\n\r\n## events\r\n\r\nboostable events are triggered by calling the `bst` javascript function. These are the core of the boostable tracking software.\r\n\r\n\r\n### init\r\n\r\ninitialize the boostable tracker. This should be placed in the header (and only once per page)\r\n\r\nparameters:\r\n* id {String} _(required)_ the boostable id provided to you\r\n\r\nusage:\r\n```javascript\r\nbst('init', '<BOOST_ID>');\r\n```\r\n\r\n### cart\r\n\r\nsends boostable the current cart status. This should be called after any cart update (add/remove).\r\n\r\nparameters:\r\n* cartItems {Array[EcommerceObject] | EcommerceObject} _(optional)_ the current cart\r\n\r\nusage:\r\n```javascript\r\n// empty cart:\r\nbst('cart'); \r\n// or\r\nbst('cart', []);\r\n\r\n// single item cart:\r\nbst('cart', {/*ecommerceObject 1*/});\r\n// or\r\nbst('cart', [{/*ecommerceObject 1*/}]);\r\n\r\n// multi item cart:\r\nbst('cart', [{/*ecommerceObject 1*/}, {/*ecommerceObject 2*/} /*, ...*/ ]);\r\n// or\r\nbst('cart', {/*ecommerceObject 1*/},  {/*ecommerceObject 2*/} /*, ...*/);\r\n```\r\n\r\n### purchase\r\n\r\ntrack a purchase event. This should be called when an order is placed (and only after)\r\n\r\nparameters:\r\n* order {EcommerceOrder} _(required)_ the order in question \r\n\r\nusage:\r\n```javascript\r\nbst('purchase', {/*ecommerceOrder*/});\r\n```\r\n\r\n### view\r\n\r\ntrigger a page view. This should be called on any page, or any new modal (with any updated information).\r\n\r\nparameters:\r\n* item {EcommerceObject} _(optional)_ the item or category being viewed\r\n\r\nusage:\r\n```javascript\r\n// simple page view\r\nbst('view')\r\n\r\n// ecommerce page view\r\nbst('view', {/*ecommerceObject*/})\r\n\r\n// ecommerce category view\r\nbst('view', {/*ecommerceObject with null sku and defined category*/})\r\n```\r\n\r\n### examples\r\n\r\nhere are a view examples of calling the events. \r\n\r\necommerce category view:\r\n```javascript\r\nbst('view', {sku: null, category: ['foo', 'bar']});\r\n```\r\n\r\nsingle item cart:\r\n```javascript\r\nbst('cart', {\r\n  sku: 'foo-123',\r\n  cost: 1234,\r\n  name: 'foo bar'\r\n});\r\n```\r\n\r\nmulti item cart:\r\n```javascript\r\nvar c = [\r\n  {\r\n    sku: 'foo-123',\r\n    cost: 123,\r\n    name: 'foo 123'\r\n  },\r\n  {\r\n    sku: 'foo-456',\r\n    cost: 456,\r\n    name: 'foo 456'\r\n  }\r\n];\r\nbst('cart', c);\r\n```\r\n\r\nsingle item purchase:\r\n```javascript\r\nvar o = {\r\n  id: 'order-123',\r\n  total: 4324,\r\n  subTotal: 4000,\r\n  tax: 324,\r\n  shipping: 0,\r\n  discount: 0,\r\n  currency: 'USD',\r\n  cart: {\r\n    sku: 'foo-4000',\r\n    cost: 4000,\r\n    name: 'foo 4000'\r\n  }\r\n};\r\nbst('purchase', o);\r\n```\r\n\r\nmulti-item purchase\r\n```javascript\r\nvar c = [\r\n  {\r\n    sku: 'foo-123',\r\n    cost: 123,\r\n    name: 'foo 123'\r\n  },\r\n  {\r\n    sku: 'foo-456',\r\n    cost: 456,\r\n    name: 'foo 456'\r\n  }\r\n];\r\nvar o = {\r\n  id: 'order-703',\r\n  total: 703,\r\n  subTotal: 579,\r\n  tax: 124,\r\n  fee: 0,\r\n  currency: 'USD',\r\n  cart: c\r\n};\r\nbst('purchase', o);\r\n```\r\n\r\n### see also:\r\n\r\nthis [fiddle](https://jsfiddle.net/boostmike/dnpvudrk/) for a simple ecommerce simulation. Use as reference only.\r\n\r\ninstall our pixel event helper chrome extension [here](https://chrome.google.com/webstore/detail/boostable-event-monitor/ghbjkdijmhfknflecmgfkjpafjhlebdc)\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}